--- a/finalforeach/cosmicreach/networking/netty/packets/MessagePacket.java
+++ b/finalforeach/cosmicreach/networking/netty/packets/MessagePacket.java
@@ -1,5 +_,6 @@
 package finalforeach.cosmicreach.networking.netty.packets;
 
+import com.github.puzzle.paradox.game.command.CommandParsing;
 import finalforeach.cosmicreach.GameSingletons;
 import finalforeach.cosmicreach.accounts.Account;
 import finalforeach.cosmicreach.chat.Chat;
@@ -11,6 +_,8 @@
 import io.netty.buffer.ByteBuf;
 import io.netty.channel.ChannelHandlerContext;
 
+import static com.github.puzzle.paradox.core.PuzzlePL.SERVER_ACCOUNT;
+
 public class MessagePacket extends GamePacket {
 	public static final int MAX_MESSAGE_LENGTH = 256;
 	public String playerUniqueId;
@@ -45,11 +_,16 @@
 				ctx.disconnect();
 				return;
 			}
-
-			Account account1 = ServerSingletons.getAccount(identity);
-			Logger.info("Chat from " + account1.getUniqueId() + " | " + account1.getDisplayName() + ": " + this.message);
-			this.playerUniqueId = account1.getUniqueId();
-			ServerSingletons.server.broadcastAsServerExcept(this, identity);
+			if(message.charAt(0)!='\\' || message.charAt(0)!='.') {
+				Account account1 = ServerSingletons.getAccount(identity);
+				Logger.info("Chat from " + account1.getUniqueId() + " | " + account1.getDisplayName() + ": " + this.message);
+				this.playerUniqueId = account1.getUniqueId();
+				var pack = new MessagePacket(account1.getDisplayName()+"> " + this.message);
+				pack.playerUniqueId = SERVER_ACCOUNT.getUniqueId();
+				ServerSingletons.server.broadcastAsServerExcept(pack, identity);
+			}else {
+				CommandParsing.parse(this,message,identity,ctx);
+			}
 		}
 	}
 }
