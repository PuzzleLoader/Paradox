--- a/finalforeach/cosmicreach/savelib/blockdata/IBlockData.java
+++ b/finalforeach/cosmicreach/savelib/blockdata/IBlockData.java
@@ -1,31 +_,26 @@
 package finalforeach.cosmicreach.savelib.blockdata;
 
+import java.util.function.Predicate;
+
 import finalforeach.cosmicreach.savelib.IChunkByteWriter;
 import finalforeach.cosmicreach.savelib.ISaveFileConstant;
-import java.util.function.Predicate;
-
-public interface IBlockData<T> extends ISaveFileConstant {
-	int CHUNK_WIDTH = 16;
-
-	T getBlockValue(int var1, int var2, int var3);
-
-	IBlockData<T> setBlockValue(T var1, int var2, int var3, int var4);
-
-	IBlockData<T> fill(T var1);
-
-	IBlockData<T> fillLayer(T var1, int var2);
-
-	int getBlockValueID(T var1);
-
-	T getBlockValueFromPaletteId(int var1);
-
-	boolean isEntirely(T var1);
-
-	boolean isEntirely(Predicate<T> var1);
-
-	int getUniqueBlockValuesCount();
-
-	void writeTo(IChunkByteWriter var1);
-
-	boolean hasValueInPalette(T var1);
+import finalforeach.cosmicreach.savelib.ISavedChunk;
+
+public interface IBlockData<T> extends ISaveFileConstant
+{
+	public static final int CHUNK_WIDTH = ISavedChunk.CHUNK_WIDTH;
+	public T getBlockValue(int localX, int localY, int localZ);
+	
+	public IBlockData<T> setBlockValue(T block, int localX, int localY, int localZ);
+	public IBlockData<T> fill(T block);
+	public IBlockData<T> fillLayer(T block, int localY);
+	
+	public int getBlockValueID(T blockValue);
+	public T getBlockValueFromPaletteId(int bId);
+	
+	boolean isEntirely(T blockValue);
+	boolean isEntirely(Predicate<T> predicate);
+	public int getUniqueBlockValuesCount();
+	public void writeTo(IChunkByteWriter allChunksWriter);
+	public boolean hasValueInPalette(T value);
 }
