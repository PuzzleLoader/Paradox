--- a/finalforeach/cosmicreach/savelib/blockdata/layers/IBlockSingleLayer.java
+++ b/finalforeach/cosmicreach/savelib/blockdata/layers/IBlockSingleLayer.java
@@ -1,24 +_,36 @@
 package finalforeach.cosmicreach.savelib.blockdata.layers;
 
 import finalforeach.cosmicreach.savelib.IChunkByteWriter;
+import finalforeach.cosmicreach.savelib.SaveFileConstants;
 import finalforeach.cosmicreach.savelib.blockdata.LayeredBlockData;
 
-public interface IBlockSingleLayer<T> extends IBlockLayer<T> {
+public interface IBlockSingleLayer<T> extends IBlockLayer<T>
+{
 	T getBlockValue();
 
 	@Override
-	default int getSaveFileConstant(LayeredBlockData<T> chunkData) {
-		int i = chunkData.getBlockValueID(this.getBlockValue());
-		return i <= 255 ? 1 : 2;
+	public default int getSaveFileConstant(LayeredBlockData<T> chunkData) 
+	{
+		int paletteId = chunkData.getBlockValueID(getBlockValue());
+		if(paletteId <= 255) 
+		{
+			return SaveFileConstants.BLOCK_LAYER_SINGLE_BYTE;
+		}else 
+		{
+			return SaveFileConstants.BLOCK_LAYER_SINGLE_INT;
+		}
 	}
 
 	@Override
-	default void writeTo(LayeredBlockData<T> chunkData, IChunkByteWriter allChunksWriter) {
-		int i = chunkData.getBlockValueID(this.getBlockValue());
-		if (i <= 255) {
-			allChunksWriter.writeByte(i);
-		} else {
-			allChunksWriter.writeInt(i);
+	public default void writeTo(LayeredBlockData<T> chunkData, IChunkByteWriter allChunksWriter) 
+	{
+		int paletteId = chunkData.getBlockValueID(getBlockValue());
+		if(paletteId <= 255) 
+		{
+			allChunksWriter.writeByte(paletteId);
+		}else 
+		{
+			allChunksWriter.writeInt(paletteId);
 		}
 	}
 }
