--- a/finalforeach/cosmicreach/savelib/ISavedChunk.java
+++ b/finalforeach/cosmicreach/savelib/ISavedChunk.java
@@ -5,43 +_,27 @@
 import finalforeach.cosmicreach.savelib.blocks.IBlockState;
 import finalforeach.cosmicreach.savelib.lightdata.skylight.ISkylightData;
 
-public interface ISavedChunk<B extends IBlockState> {
-	int CHUNK_WIDTH = 16;
-	int NUM_BLOCKS_IN_CHUNK = 4096;
-
-	boolean isEntirelyOpaque();
-
-	boolean isEntirelyOneBlockSelfCulling();
-
-	int getMaxNonEmptyBlockIdxYXZ();
-
-	int getBlockX();
-
-	int getBlockY();
-
-	int getBlockZ();
-
-	IBlockData<?> getBlockData();
-
-	void initChunkData(IBlockDataFactory<B> var1);
-
-	void fillLayer(B var1, int var2);
-
-	void fill(B var1);
-
-	void setBlockState(B var1, int var2, int var3, int var4);
-
-	boolean isSaved();
-
-	void compactChunkData();
-
-	int getChunkX();
-
-	int getChunkY();
-
-	int getChunkZ();
-
-	void setSkyLight(int var1, int var2, int var3, int var4);
-
-	void setSkylightData(ISkylightData var1);
+public interface ISavedChunk<B extends IBlockState> 
+{
+	public static final int CHUNK_WIDTH = 16;
+	public static final int NUM_BLOCKS_IN_CHUNK = CHUNK_WIDTH * CHUNK_WIDTH * CHUNK_WIDTH;
+	public boolean isEntirelyOpaque();
+	public boolean isEntirelyOneBlockSelfCulling();
+	public int getMaxNonEmptyBlockIdxYXZ();
+	public int getBlockX();
+	public int getBlockY();
+	public int getBlockZ();
+	public IBlockData<?> getBlockData();
+	public void initChunkData(IBlockDataFactory<B> layeredChunkDataFactory);
+	public void fillLayer(B block, int localY);
+	public void fill(B block);
+	public void setBlockState(B block, int i, int j, int k);
+	public boolean isSaved();
+	public void compactChunkData();
+	public int getChunkX();
+	public int getChunkY();
+	public int getChunkZ();
+	public void setSkyLight(int lightLevel, int localX, int localY, int localZ);
+	public void setSkylightData(ISkylightData skylightData);
+
 }
