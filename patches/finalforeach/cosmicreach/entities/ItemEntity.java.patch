--- a/finalforeach/cosmicreach/entities/ItemEntity.java
+++ b/finalforeach/cosmicreach/entities/ItemEntity.java
@@ -10,7 +_,6 @@
 import finalforeach.cosmicreach.GameSingletons;
 import finalforeach.cosmicreach.TickRunner;
 import finalforeach.cosmicreach.blocks.BlockState;
-import finalforeach.cosmicreach.entities.player.Player;
 import finalforeach.cosmicreach.items.ItemStack;
 import finalforeach.cosmicreach.networking.packets.ContainerSyncPacket;
 import finalforeach.cosmicreach.networking.packets.sounds.PlaySound3DPacket;
@@ -27,7 +_,7 @@
 	public static SoundBuffer pickupSound;
 	public static SoundBuffer flickSound;
 	@CRBSerialized
-	ItemStack itemStack;
+	public ItemStack itemStack;
 	@CRBSerialized
 	float maxAge = 300.0F;
 	@CRBSerialized
@@ -39,7 +_,7 @@
 	boolean isFollowed;
 
 	public ItemEntity() {
-		super("base:entity_item");
+      	super(ENTITY_TYPE_ID);
 		this.setSize(0.3F);
 		this.randomHoverOffsetTime = MathUtils.random() * (float) (Math.PI * 2);
 	}
@@ -84,9 +_,11 @@
 	@Override
 	public void update(Zone zone, float deltaTime) {
 		super.update(zone, deltaTime);
+
 		if (this.age > this.minPickupAge) {
 			this.isFollowed = false;
 			zone.forEachPlayer(p -> {
+
 				Entity entity = p.getEntity();
 				Vector3 vector3 = entity.position;
 				float f1 = this.position.dst(vector3.x, vector3.y + 1.0F, vector3.z);
@@ -111,6 +_,7 @@
 							}
 
 							if (ServerSingletons.SERVER != null) {
+
 								ServerIdentity serveridentity = ServerSingletons.getConnection(p);
 								serveridentity.send(new PlaySound3DPacket(pickupSoundId, this.position, 1.0F, MathUtils.random(1.0F, 1.2F)));
 								serveridentity.send(new ContainerSyncPacket(0, p.inventory));
