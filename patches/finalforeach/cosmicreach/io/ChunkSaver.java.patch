--- a/finalforeach/cosmicreach/io/ChunkSaver.java
+++ b/finalforeach/cosmicreach/io/ChunkSaver.java
@@ -13,12 +_,12 @@
 import finalforeach.cosmicreach.savelib.crbin.CRBinSerializer;
 import finalforeach.cosmicreach.savelib.lightdata.blocklight.IBlockLightData;
 import finalforeach.cosmicreach.savelib.lightdata.skylight.ISkylightData;
-import finalforeach.cosmicreach.util.logging.Logger;
 import finalforeach.cosmicreach.world.Chunk;
 import finalforeach.cosmicreach.world.EntityRegion;
 import finalforeach.cosmicreach.world.Region;
 import finalforeach.cosmicreach.world.World;
 import finalforeach.cosmicreach.world.Zone;
+
 import java.io.File;
 import java.io.FileOutputStream;
 import java.io.IOException;
@@ -26,10 +_,12 @@
 import java.nio.charset.StandardCharsets;
 import net.jpountz.lz4.LZ4Compressor;
 import net.jpountz.lz4.LZ4Factory;
-
 public class ChunkSaver {
 	private static final LZ4Factory LZ4_FACTORY = LZ4Factory.fastestInstance();
 	private static final LZ4Compressor LZ4_COMPRESSOR = LZ4_FACTORY.fastCompressor();
+
+   private static final org.slf4j.Logger LOGGER = org.slf4j.LoggerFactory.getLogger("Cosmic Reach | Chunk Saver");
+
 	public static volatile boolean isSaving;
 
 	private static void writeInt(ByteArray byteArr, int i) {
@@ -59,19 +_,19 @@
 			throw new RuntimeException(ioexception);
 		}
 	}
-
 	public static void saveWorld(World world) {
 		try {
 			isSaving = true;
-			Logger.info("Started saving world");
+         LOGGER.info("Started saving world");
 			saveWorldInfo(world, false);
 			PlayerSaver.savePlayers(world);
 
+
 			for (Zone zone : world.getZones()) {
 				saveZone(zone);
 			}
 
-			Logger.info("Finished saving");
+         LOGGER.info("Finished saving");
 		} finally {
 			isSaving = false;
 		}
@@ -172,7 +_,7 @@
 					}
 				}
 			} catch (Exception exception1) {
-				Logger.error("Error loading bytes from region file: " + s2);
+				LOGGER.error("Error loading bytes from region file: " + s2);
 				exception1.printStackTrace();
 			}
 		}
