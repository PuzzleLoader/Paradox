buildscript {
    repositories {
        flatDir {
            // to use local builds
            dirs 'lib'
        }
    }

    dependencies {
        classpath "com.github.puzzle:puzzleDecompGradle:1.0-SNAPSHOT"
    }
}
plugins {
    id "com.gradleup.shadow" version "8.3.3"
}
group = 'com.github.puzzle'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://maven.google.com/" }
    maven { url "https://libraries.minecraft.net" }
    maven {
        name "neoforged"
        url "https://maven.neoforged.net/release"
    }
}

apply plugin: "java"
apply plugin: "puzzle-crcp-gradle"

dependencies {
    //comment out if using server
//    implementation "com.badlogicgames.gdx-controllers:gdx-controllers-core:$gdxControllersVersion"
//    implementation "com.badlogicgames.gdx-controllers:gdx-controllers-desktop:$gdxControllersVersion"

//    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    ///////

    implementation("com.google.guava:guava:$guavaVersion")
//            {
//        exclude (group: "com.google.common" , module: "google-collect")
//    }
    implementation("com.google.code.gson:gson:$gsonVersion")
    implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
    implementation "org.lz4:lz4-java:1.8.0"
    implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
    implementation 'com.github.FinalForEach:Cosmic-Reach-Save-Library:1652c6aa1c'


//    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion"
//    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

    implementation "com.github.Hangman:TuningFork:$tuningFork"
    implementation "io.netty:netty-all:4.1.24.Final"

    implementation("org.reflections:reflections:$reflectionsVersion")
    implementation("com.mojang:brigadier:1.0.18")
    implementation 'org.apache.commons:commons-configuration2:2.11.0'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'

    implementation "net.neoforged:bus:8.0.2"
    implementation("org.apache.logging.log4j:log4j-api:$log4jVersion")
    implementation("org.apache.logging.log4j:log4j-core:$log4jVersion")
    implementation("org.apache.logging.log4j:log4j-slf4j2-impl:$log4jVersion")
    implementation 'org.jline:jline:3.25.0'
    implementation 'org.fusesource.jansi:jansi:2.2.0'
    implementation("org.hjson:hjson:$hjsonVersion")
    implementation('org.jetbrains:annotations:24.0.0')
    implementation("net.sf.jopt-simple:jopt-simple:$joptSimpleVersion")
}

javadoc {
}

tasks.register("copyToLib", Copy) {
    from shadowJar
    from configurations.shadow
    into("$buildDir/output/lib")
}
sourceSets {
    main {
        java {
            srcDirs "src/main/java"
            srcDirs "cosmicReach/src/main/java"
        }
        resources {
            srcDirs "src/main/resources"
            srcDirs "cosmicReach/src/main/resources"
        }
    }

}

jar {
    manifest {
        attributes("Implementation-Title": project.name,
                "Implementation-Version": version,
                "Main-Class": "com.github.puzzle.paradox.loader.launch.Piece",
                "Multi-Release": true);
    }
}
processResources() {
    duplicatesStrategy = 'EXCLUDE'
}

test {
    useJUnitPlatform()
}